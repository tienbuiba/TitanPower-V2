!function(o){"use strict";o(function(){o(".awe-carousel").each(function(){o(this).carouselItem()}),o(".ts-item-member:not('.active-hover')").mouseenter(function(){o(this).addClass("hover")}).mouseleave(function(){o(this).removeClass("hover")})}),o.fn.carouselItem=function(){var e=this,i=o(e).data(),t={};i.responsive?(t.itemsDesktop=[1199,i.items],t.itemsDesktopSmall=[979,i.itemsDesktopSmall],t.itemsTablet=[768,i.itemsTablet],t.itemsMobile=[479,i.itemsMobile]):(t.items=i.items,1==t.items&&(t.transitionStyle=i.effect)),i.pagination&&(t.pagination=i.pagination),i.navigation&&(t.navigation=i.navigation,t.navigationText=["<i class='icon fontello icon-angle-left'></i>","<i class='icon fontello icon-angle-right'></i>"]),i.auto&&(t.autoPlay=1e3*i.timeAuto,t.stopOnHover=i.stopOnHover),0==i.mousedrag&&(t.mouseDrag=i.mousedrag),0==i.touchdrag&&(t.touchDrag=i.touchdrag),o(this).owlCarousel(t)},Drupal.behaviors.articles_masonry={attach:function(e,i){var t=o(".view-article-listing .view-content");if(t.length)if("undefined"!=typeof o().masonry){e!=document&&t.masonry("destroy");var a={transitionDuration:"0.2s",itemSelector:".article-card",percentPosition:!0};a={itemSelector:".article-card",gutter:0,percentPosition:!0,columnWidth:".grid-sizer"},t.masonry(a)}else console.log("Masonry is not loaded")}},Drupal.behaviors.excelpoint_search={attach:function(e,i){function t(){o(".desktop-search-wrapper .main-nav-search-form").data("shown",1);var e=250;o(".desktop-search-wrapper .main-nav-search-form .form-type-textfield").velocity({width:e,opacity:1},{duration:400,easing:"swing",queue:"",begin:void 0,progress:void 0,complete:void 0,display:void 0,visibility:void 0,loop:!1,delay:!1,mobileHA:!0}),o(".region-main-menu .menu-block-wrapper.menu-name-main-menu.menu-level-1").velocity({opacity:.2},{duration:200,easing:"swing",queue:"",begin:void 0,progress:void 0,complete:void 0,display:void 0,visibility:void 0,loop:!1,delay:!1,mobileHA:!0})}function a(){o(".desktop-search-wrapper .main-nav-search-form").data("shown",0),o(".desktop-search-wrapper .main-nav-search-form .form-type-textfield").velocity({width:"80px",opacity:0},{duration:400,easing:"swing",queue:"",begin:void 0,progress:void 0,complete:void 0,display:void 0,visibility:void 0,loop:!1,delay:!1,mobileHA:!0}),o(".region-main-menu .menu-block-wrapper.menu-name-main-menu.menu-level-1").velocity({opacity:1},{duration:200,easing:"swing",queue:"",begin:void 0,progress:void 0,complete:void 0,display:void 0,visibility:void 0,loop:!1,delay:200,mobileHA:!0})}o(document).click(function(e){var i=o(".desktop-search-wrapper .main-nav-search-form");1==i.data("shown")&&(i.is(e.target)||0!==i.has(e.target).length||a())}),o(".main-nav-search-form .form-type-textfield input").click(function(o){o.stopPropagation()}),o(".desktop-search-wrapper .main-nav-search-form").click(function(e){if(o(this).data("shown")){var i=o("input.form-text",this).val();i?o(this).submit():(e.preventDefault(),a())}else e.preventDefault(),t()})}},Drupal.behaviors.excelpoint_search_mobile={attach:function(e,i){function t(){o(".mobile-search-wrapper .main-nav-search-form").data("shown",1),o(".mobile-search-wrapper").css("opacity",0).removeClass("hidden").show().velocity({opacity:1},{duration:200,easing:"swing",queue:"",begin:void 0,progress:void 0,complete:void 0,display:void 0,visibility:void 0,loop:!1,delay:!1,mobileHA:!0}),o(".main-nav-search-form .form-type-textfield").velocity({width:"100%"},{duration:400,easing:"swing",queue:"",begin:void 0,progress:void 0,complete:void 0,display:void 0,visibility:void 0,loop:!1,delay:!1,mobileHA:!0}),o(".navbar-brand, .mobile-country-switcher, #slogan").velocity({opacity:.2},{duration:200,easing:"swing",queue:"",begin:void 0,progress:void 0,complete:void 0,display:void 0,visibility:void 0,loop:!1,delay:!1,mobileHA:!0})}function a(){o(".mobile-search-wrapper .main-nav-search-form").data("shown",0),o(".mobile-search-wrapper").velocity({opacity:0},{duration:200,easing:"swing",queue:"",begin:void 0,progress:void 0,complete:function(){o(".mobile-search-wrapper").hide(),o(".main-nav-search-form .form-type-textfield").css("width","0%")},display:void 0,visibility:void 0,loop:!1,delay:!1,mobileHA:!0}),o(".navbar-brand, .mobile-country-switcher, #slogan").velocity({opacity:1},{duration:400,easing:"swing",queue:"",begin:void 0,progress:void 0,complete:void 0,display:void 0,visibility:void 0,loop:!1,delay:0,mobileHA:!0})}o("#main-wrapper, #footer, #footer2").click(function(e){if(!o(".mobile-search-trigger").is(e.currentTarget)){var i=o(".mobile-search-wrapper .main-nav-search-form");1==i.data("shown")&&(i.is(e.target)||0!==i.has(e.target).length||a())}}),o(".mobile-search-trigger").click(function(o){o.stopPropagation(),t()}),o(".mobile-search-wrapper .main-nav-search-form .form-submit").click(function(e){var i=o(".mobile-search-wrapper .main-nav-search-form input.form-text").val();i||(e.preventDefault(),a())})}},Drupal.behaviors.excelpoint_country={attach:function(e,i){var t='<ul class="dropdown-menu" data-container="body">         <li class="active"><a href="#">Singapore</a></li>         <li><a href="#">PRC/HK</a></li>       </ul>';t="test",o("#country-switcher").popover({content:t,html:!0,placement:"bottom"})}},Drupal.behaviors.ras_to_top={attach:function(e,i){o(".back-to-top").css("opacity",.3),o(window).scroll(function(e){o(window).scrollTop()>400?o(".back-to-top").css("opacity",1):o(".back-to-top").css("opacity",.3)})}},Drupal.behaviors.ras_letter_browsing={attach:function(e,i){var t=o(".letter-browsing-container");if(t.length>0){var a="abcdefghijklmnopqrstuvwxyz".split(""),n={};o("a.letter-browsing-anchor").each(function(e,i){var t=o(i).data("letter");t&&(n[t]=1)});for(var r=[],s=0;26>s;s++){var d=a[s],c="";"undefined"==typeof n[d]&&(c="unavailable"),r.push('<li class="'+c+'"><a href="#'+d+'" class="letter-browsing">'+d+"</a></li>")}r="<ul>"+r.join("")+"</ul>",o(t).each(function(e,i){o(i).empty().append(r)}),o("body").append('<div class="letter-browsing-container-floating hidden">'+r+"</div>"),o(window).scroll(function(e){var i=o(window).scrollTop();o(t).each(function(e,t){i>o(t).offset().top+30?o(".letter-browsing-container-floating").removeClass("hidden").show():o(".letter-browsing-container-floating").hide()})})}}}}(jQuery),function(o,e,i,t,a){e.behaviors.radix_dropdown={attach:function(e,a){o(".dropdown-special").once("radix-dropdown",function(){function e(){o(n).hasClass("open")||o('>[data-toggle="dropdown"]',n).trigger("click.bs.dropdown")}function a(){o(n).hasClass("open")&&o('>[data-toggle="dropdown"]',n).trigger("click.bs.dropdown")}var n=this;o(this).on("mouseenter.radix.dropdown",function(o){e()}),o(this).on("mouseleave.radix.dropdown",function(){a()}),o(this).on("focusin.radix.dropdown",function(){e()}),o("body").once("radix-dropdown").on("focusout.radix.dropdown",function(e){var i=o(e.target).closest("li.radix-dropdown-processed.open").get(0);i&&setTimeout(function(){t.activeElement&&t.activeElement!==t.body&&!i.contains(t.activeElement)&&o(i).hasClass("open")&&o(i).trigger("click.bs.dropdown")},0)}),o(this).on("keydown.radix.dropdown",function(e){return 38==e.keyCode||40==e.keyCode?!1:32==e.keyCode?(o('>[data-toggle="dropdown"]',n).trigger("click.bs.dropdown"),!1):27==e.keyCode?(o('>[data-toggle="dropdown"]',n).focus(),a(),!1):void 0}),o(this).has("> a.dropdown-toggle")&&o(this).on("click.radix.dropdown",function(e){var t=o(e.target);t.parent().get(0)==n&&t.is("a.dropdown-toggle")&&t.attr("href")&&(e.preventDefault(),i.location.href=t.attr("href"))})})}},e.behaviors.radix_tooltip={attach:function(e,i){o.fn.tooltip&&o("[data-toggle='tooltip']").tooltip()}},e.behaviors.radix_popover={attach:function(e,i){o.fn.popover&&o("[data-toggle='popover']").popover()}},o(t).ready(function(){if(o.fn.tab){var e=o(".nav-tabs").not(".primary");e.children("li").first().find("a").tab("show"),(hash=i.location.hash)&&o('.nav-tabs > li > a[href$="'+hash+'"]').tab("show")}})}(jQuery,Drupal,this,this.document),function(o,e,i,t,a){e.behaviors.radix_dropdown={attach:function(e,a){o(".dropdown-special").once("radix-dropdown",function(){function e(){o(n).hasClass("open")||o('>[data-toggle="dropdown"]',n).trigger("click.bs.dropdown")}function a(){o(n).hasClass("open")&&o('>[data-toggle="dropdown"]',n).trigger("click.bs.dropdown")}var n=this;o(this).on("mouseenter.radix.dropdown",function(o){e()}),o(this).on("mouseleave.radix.dropdown",function(){a()}),o(this).on("focusin.radix.dropdown",function(){e()}),o("body").once("radix-dropdown").on("focusout.radix.dropdown",function(e){var i=o(e.target).closest("li.radix-dropdown-processed.open").get(0);i&&setTimeout(function(){t.activeElement&&t.activeElement!==t.body&&!i.contains(t.activeElement)&&o(i).hasClass("open")&&o(i).trigger("click.bs.dropdown")},0)}),o(this).on("keydown.radix.dropdown",function(e){return 38==e.keyCode||40==e.keyCode?!1:32==e.keyCode?(o('>[data-toggle="dropdown"]',n).trigger("click.bs.dropdown"),!1):27==e.keyCode?(o('>[data-toggle="dropdown"]',n).focus(),a(),!1):void 0}),o(this).has("> a.dropdown-toggle")&&o(this).on("click.radix.dropdown",function(e){var t=o(e.target);t.parent().get(0)==n&&t.is("a.dropdown-toggle")&&t.attr("href")&&(e.preventDefault(),i.location.href=t.attr("href"))})})}},e.behaviors.radix_tooltip={attach:function(e,i){o.fn.tooltip&&o("[data-toggle='tooltip']").tooltip()}},e.behaviors.radix_popover={attach:function(e,i){o.fn.popover&&o("[data-toggle='popover']").popover()}},o(t).ready(function(){if(o.fn.tab){var e=o(".nav-tabs").not(".primary");e.children("li").first().find("a").tab("show"),(hash=i.location.hash)&&o('.nav-tabs > li > a[href$="'+hash+'"]').tab("show")}})}(jQuery,Drupal,this,this.document);
//# sourceMappingURL=data:application/json;base64,
